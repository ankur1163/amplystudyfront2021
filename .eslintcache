[{"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/App.js":"1","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Register.js":"2","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/auth/AuthContext.js":"3","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/config/envConfig.js":"4","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Footer.js":"5","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Login.js":"6","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/AddNewLectures.js":"7","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/Drawer/Drawer.js":"8","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/StudentDashboard.js":"9","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/reportWebVitals.js":"10","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Header.js":"11","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Theme.js":"12","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/InstructorLecturesDisplay.js":"13","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/graphqlApi/mutations.js":"14","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/index.js":"15","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Homepage.js":"16","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/InstructorDashboard.js":"17","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/util/token.js":"18","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/StudentLectureVideo.js":"19"},{"size":2291,"mtime":1612284913008,"results":"20","hashOfConfig":"21"},{"size":3638,"mtime":1612284875267,"results":"22","hashOfConfig":"21"},{"size":1474,"mtime":1612284913009,"results":"23","hashOfConfig":"21"},{"size":67,"mtime":1612118646413,"results":"24","hashOfConfig":"21"},{"size":1100,"mtime":1612284913010,"results":"25","hashOfConfig":"21"},{"size":4386,"mtime":1612647868722,"results":"26","hashOfConfig":"21"},{"size":8100,"mtime":1612638802217,"results":"27","hashOfConfig":"21"},{"size":1963,"mtime":1612284875259,"results":"28","hashOfConfig":"21"},{"size":2644,"mtime":1612644176875,"results":"29","hashOfConfig":"21"},{"size":362,"mtime":1612118646418,"results":"30","hashOfConfig":"21"},{"size":1849,"mtime":1612284913011,"results":"31","hashOfConfig":"21"},{"size":3630,"mtime":1612284875263,"results":"32","hashOfConfig":"21"},{"size":485,"mtime":1612284913011,"results":"33","hashOfConfig":"21"},{"size":855,"mtime":1612284913013,"results":"34","hashOfConfig":"21"},{"size":474,"mtime":1612118646414,"results":"35","hashOfConfig":"21"},{"size":23360,"mtime":1612284913017,"results":"36","hashOfConfig":"21"},{"size":4025,"mtime":1612638802221,"results":"37","hashOfConfig":"21"},{"size":321,"mtime":1612284875268,"results":"38","hashOfConfig":"21"},{"size":3425,"mtime":1612284913013,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"q26pjn",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/App.js",["88"],"import { ThemeProvider } from '@material-ui/styles';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport theme from './components/ui/Theme';\nimport Footer from './components/ui/Footer';\nimport Header from './components/ui/Header';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport { AuthProvider } from './auth/AuthContext';\nimport StudentDashboard from './pages/StudentDashboard';\nimport InstructorDashboard from './pages/InstructorDashboard';\nimport InstructorEditLecture from './pages/InstructorEditLecture';\nimport envConfig from './config/envConfig';\nimport './App.css';\n\nconst httpLink = createHttpLink({\n\turi: envConfig.HASURA_URL,\n});\n\nconst authLink = setContext(({ operationName }, prevCtx) => {\n\tconst publicOperations = ['Signin', 'Signup'];\n\tconsole.log('operationname', operationName);\n\tconst token = localStorage.getItem('user_token');\n\tconst headers = {\n\t\t...prevCtx.header,\n\t};\n\n\tif (token === undefined || token === null || token === '') {\n\t\tconsole.info('token not found', token);\n\t\treturn;\n\t}\n\tconsole.info('token found');\n\theaders.authorization = `Bearer ${token}`;\n\n\treturn { headers };\n});\n\nconst client = new ApolloClient({\n\tcache: new InMemoryCache(),\n\tlink: authLink.concat(httpLink),\n});\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<AuthProvider>\n\t\t\t\t\t<ApolloProvider client={client}>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Homepage} />\n\t\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t<Route path=\"/register\" component={Register} />\n\t\t\t\t\t\t\t<Route path=\"/studentdashboard\" component={StudentDashboard} />\n\t\t\t\t\t\t\t<Route path=\"/instructordashboard\" component={InstructorDashboard} />\n\t\t\t\t\t\t\t<Route path=\"/instructoreditlecture\" component={InstructorEditLecture} />\n\t\t\t\t\t\t\t<Route path=\"/paymentcompleted\" component={() => <h1>payment completed</h1>} />\n\t\t\t\t\t\t\t<Route path=\"*\" component={Homepage} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</ApolloProvider>\n\t\t\t\t</AuthProvider>\n\t\t\t</BrowserRouter>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n",["89","90"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Register.js",["91"],"import React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Typography, TextField, Button, Grid } from '@material-ui/core';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\n\nconst useStyles = makeStyles((theme) => ({\n\tloginLink: {\n\t\tcolor: theme.palette.primary.main,\n\t\tfontWeight: 600,\n\t\ttextDecoration: 'none',\n\t\tmargin: '0 0.5rem',\n\t},\n}));\n\nconst initialValues = {\n\tdisplayName: '',\n\temail: '',\n\tpassword: '',\n};\n\nconst SIGN_UP_MUTATION = gql`\n\tmutation Signup($email: String!, $password: String!, $displayName: String!) {\n\t\tcreate_user(credentials: { email: $email, password: $password, displayName: $displayName }) {\n\t\t\tdisplayName\n\t\t\temail\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst validationSchema = Yup.object().shape({\n\tdisplayName: Yup.string().required('This field is required'),\n\temail: Yup.string().email('it should be an email').required('This field is required'),\n\tpassword: Yup.string().required('This field is required'),\n});\n\nfunction Register(props) {\n\tconst classes = useStyles();\n\tconst [create_user, { loading }] = useMutation(SIGN_UP_MUTATION);\n\tlet history = useHistory();\n\n\tconst signupHandler = async (values) => {\n\t\tcreate_user({\n\t\t\tvariables: values,\n\t\t})\n\t\t\t.then(({ error }) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.warn('error is ', error);\n\t\t\t\t} else {\n\t\t\t\t\thistory.push('/signin');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(error);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={0}\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\tstyle={{ height: 'calc(100vh - 240px)' }}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\">Create account</Typography>\n\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tonSubmit={signupHandler}\n\t\t\t\t>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tisValid,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\tisInitialValid,\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\t\t\t\t\tvalue={values.displayName}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.displayName && errors.displayName}\n\t\t\t\t\t\t\t\t\thelperText={touched.displayName && errors.displayName}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-around\" mt={2} mb={4}>\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\" className={classes.loginLink}>\n\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Grid>\n\t\t</>\n\t);\n}\n\nexport default Register;\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/auth/AuthContext.js",["92"],"import React, { createContext, useEffect, useContext, useState } from 'react';\nimport { useHistory, Route, Redirect } from 'react-router-dom';\nimport { decode } from '../util/token';\n\nexport const authContext = createContext(null);\n\nexport function AuthProvider({ children }) {\n\tconst initialState = {\n\t\tisUserLogged: Boolean(localStorage.getItem('user_token')),\n\t\tuserName: '',\n\t\tuserId: '',\n\t\tuserEmail: '',\n\t};\n\tconst [userProfile, setUserProfile] = useState(() => initialState);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst existSessionActive = localStorage.getItem('user_token');\n\n\t\tif (existSessionActive) {\n\t\t\tupdateUserProfile(existSessionActive);\n\t\t} else {\n\t\t\thistory.replace('/');\n\t\t}\n\t}, []);\n\n\tconst updateUserProfile = (session) => {\n\t\tconst { name, user_id, email } = decode(session);\n\t\tsetUserProfile({\n\t\t\t...initialState,\n\t\t\tuserName: name,\n\t\t\tuserId: user_id,\n\t\t\tuserEmail: email,\n\t\t});\n\t};\n\n\tconst signOut = () => {\n\t\tlocalStorage.removeItem('user_token');\n\t\tsetUserProfile({\n\t\t\tisUserLogged: false,\n\t\t\tuserName: '',\n\t\t\tuserId: '',\n\t\t\tuserEmail: '',\n\t\t});\n\t\thistory.replace('/login');\n\t};\n\n\treturn (\n\t\t<authContext.Provider\n\t\t\tvalue={{\n\t\t\t\tuserProfile,\n\t\t\t\tsetUserProfile,\n\t\t\t\tsignOut,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</authContext.Provider>\n\t);\n}\n\nexport function ProtectedRoute({ children, props }) {\n\tconst context = useContext(authContext);\n\treturn <Route {...props}>{context?.isUserSignedIn ? children : <Redirect to=\"/signin\" />}</Route>;\n}\n",["93","94"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/config/envConfig.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Footer.js",["95","96","97"],"import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\tfooter: {\n\t\tposition: 'relative',\n\t\twidth: '100%',\n\t\tbottom: 0,\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t\tfontFamily: 'Roboto',\n\t\tfontSize: '14px',\n\t\ttextAlign: 'center',\n\t\tfontWeight: '500',\n\t\tlineHeight: '24.5px',\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nexport default function Footer(props) {\n\tconst location = useLocation();\n\tconst paths = location.pathname.match(/\\/([a-z]*)/, 'g');\n\tconst [, path = ''] = paths || [];\n\tconst classes = useStyles();\n\treturn (\n\t\t<footer className={`${path === 'studentdashboard' ? classes.appBar : ''} ${classes.footer}`}>\n\t\t\t<Box pt={2} pb={2} align=\"center\">\n\t\t\t\t<Typography variant=\"h4\">Footer</Typography>\n\t\t\t</Box>\n\t\t</footer>\n\t);\n}\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Login.js",["98","99","100","101"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/AddNewLectures.js",["102","103","104","105","106","107","108","109"],"import React, { useEffect, useState } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Divider, Grid, Typography, Button,FormControlLabel,RadioGroup,Radio,FormControl,FormLabel } from '@material-ui/core';\nimport { gql, useQuery } from '@apollo/client';\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\nimport {TextField} from \"@material-ui/core\";\nimport { useMutation } from '@apollo/client';\nimport { string } from 'yup/lib/locale';\n\nconst initialValues = {\n    title:\"\",\n    videoUrl:\"\",\n    description:\"\",\n    type:\"lecture\",\n    paid:true,\n    snumber:\"\",\n}\n\nconst validationSchema = Yup.object().shape({\n    title:Yup.string(\"please input title in string only\").required(\"this field is required\"),\n    videoUrl:Yup.string(\"please input videoURL in string only\"),\n    description:Yup.string(\"please input description in string only\").required(\"this field is required\"),\n    type:Yup.string(\"please input type\").required(\"input is required\"),\n    paid:Yup.bool(\"only select true or false\").required(\"paid field is required\"),\n    snumber:Yup.number(\"number is required\").required(\"cant leave empty\").positive(\"should be a positive number\")\n\n})\n\n\n\n\nconst ADD_LECTURE = gql`\nmutation Addlecture($description: String!,$paid: Boolean!, $snumber:Int!,$title:String!,$type: String!,$videoUrl: String!) {\n    insert_lectures(objects: {description: $description, paid: $paid, snumber: $snumber, title: $title, type: $type, videoUrl: $videoUrl}) {\n      returning {\n        description\n        snumber\n        title\n        type\n        videoUrl\n      }\n    }\n  }\n\n\n\n\n`;\n\n\n\n\nexport default function AddNewLectures(props) {\n    const [addNewLecture, setaddNewLecture] = useState(true);\n   const [addLecturegraphql, {loading}] = useMutation(ADD_LECTURE)\n    \n   const addlectureHandler=(values, {resetForm})=>{\n    console.log(\"add lecture handler\",values);\n    const newValues = parseInt(values.snumber)\n    values.snumber = newValues;\n    addLecturegraphql({variables:values}).then(({errors,data})=> {\n        return errors ? console.log(\"errors are \",errors)  :  (console.log(\"data is\",data),resetForm())\n    })\n    \n}\n   \n   if (addNewLecture) {\n      return (\n        <div>\n          <Button\n            onClick={() => setaddNewLecture((prevstate) => !prevstate)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Add new lecture\n          </Button>\n        </div>\n      );\n    }\n  \n    return (\n      <div>\n        \n            <Typography variant=\"h6\">\n                Add new lecture\n            </Typography>\n            <Formik initialValues={initialValues} onSubmit={addlectureHandler} validationSchema={validationSchema}>\n                {({\n                    values,\n                    touched,\n                    errors,\n                    isValid,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isInitialValid,\n                    submitCount,\n                    isSubmitting\n                })=>(\n                    <form onSubmit={handleSubmit} >\n                      <Grid  container >\n                          <Grid item>\n                          <TextField\n                        label=\"title\"\n                        name=\"title\"\n                        value={values.title}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        \n                        error={!!(errors && errors.title && touched.title)}\n                        helperText={\n                            errors && errors.title && touched.title\n                        }\n                        margin=\"normal\"\n\n                        />\n                          </Grid>\n                      \n\n                    \n\n                      <Grid item>\n                      <TextField\n                        label=\"videourl\"\n                        name=\"videoUrl\"\n                        value={values.videoUrl}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                       \n                        error={!!(errors && errors.password && touched.password)}\n                        helperText={\n                            errors && errors.password && touched.password\n                        }\n                        margin=\"normal\"\n\n                        />\n                        </Grid>\n                        <Grid item>\n                        <TextField\n                        label=\"description\"\n                        name=\"description\"\n                        value={values.description}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                       \n                        error={!!(errors && errors.description && touched.description)}\n                        helperText={\n                            errors && errors.description && touched.description\n                        }\n                        margin=\"normal\"\n\n                        />\n                        </Grid>\n                        <Grid item>\n                        <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">type</FormLabel>\n                        <RadioGroup aria-label=\"type\" name=\"type\" value={values.type} onChange={handleChange}>\n                            <FormControlLabel value=\"lecture\" control={<Radio />} label=\"lecture\" />\n                            <FormControlLabel value=\"assignment\" control={<Radio />} label=\"assignment\" />\n                            \n                        </RadioGroup>\n                        </FormControl>\n                       \n                        </Grid>\n                        <Grid item>\n                        <FormControl component=\"fieldset2\">\n                        <FormLabel component=\"legend2\">Paid</FormLabel>\n                        <RadioGroup aria-label=\"paid\" name=\"paid\" value={values.paid} onChange={handleChange}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label=\"true\" />\n                            <FormControlLabel value=\"false\" control={<Radio />} label=\"false\" />\n                            \n                        </RadioGroup>\n                        </FormControl>\n                        </Grid>\n                        <Grid item>\n                        <TextField\n                        label=\"snumber\"\n                        name=\"snumber\"\n                        value={values.snumber}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                       \n                        error={!!(errors && errors.snumber && touched.snumber)}\n                        helperText={\n                            errors && errors.snumber && touched.snumber\n                        }\n                        margin=\"normal\"\n\n                        />\n                        </Grid>\n                          \n                          <Grid item >\n                          <Button\n                            \n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick= {()=>setaddNewLecture(true)}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            \n                            disabled={!isValid || !!isInitialValid}>\n                                save\n                            </Button>\n\n                          </Grid>\n                          <Grid item>\n                          \n\n                          </Grid>\n                         \n                       </Grid> \n                    </form>\n                )\n\n                }\n            </Formik>\n      \n       \n      </div>\n    );\n  }",["110","111"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/Drawer/Drawer.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/StudentDashboard.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useEffect, useState, setState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tAppBar,\n\tCssBaseline,\n\tDivider,\n\tHidden,\n\tIconButton,\n\tList,\n\tListItem,\n\tListItemText,\n\tToolbar,\n\tTypography,\n} from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport StudentLectureVideo from '../components/ui/StudentLectureVideo';\nimport ShowComments from '../components/ui/ShowComments';\nimport Drawer from '../components/Drawer/Drawer';\nimport { useQuery } from '@apollo/client';\nimport { getLectures } from '../graphqlApi/querys';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t},\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n}));\n\nfunction StudentDashboard(props) {\n\tconst initialLecture = [\n\t\t{\n\t\t\ttitle: 'No video is selected',\n\t\t\tvideoUrl: '',\n\t\t\tdescription: '',\n\t\t\tid: '',\n\t\t\tpaid: false,\n\t\t\tsnumber: 1,\n\t\t\ttype: 'lecture',\n\t\t\tlectureTitle: '',\n\t\t\ttext: '',\n\t\t\tdoneStatus: false,\n\t\t},\n\t];\n\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = useState(false);\n\tconst { loading, error, data = {} } = useQuery(getLectures);\n\tconst { lectures = [] } = data;\n\tconst [currentLectureDetails, setCurrentLectureDetails] = useState(initialLecture);\n\n\tuseEffect(() => {\n\t\tif (lectures.length !== 0) {\n\t\t\tsetCurrentLectureDetails(lectures[0]);\n\t\t}\n\t}, [lectures]);\n\n\tif (loading) return 'loading...';\n\n\tif (error) return `Error is ${error.message}`;\n\n\tconst handleToggleDrawer = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\tconst handleLectureClick = (id) => {\n\t\tconst lectureSelected = lectures.find((item) => item.id === id);\n\t\tsetCurrentLectureDetails(lectureSelected);\n\t};\n\n\treturn (\n\t\t<main className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\n\t\t\t\t<Drawer\n\t\t\t\t\tlectures={lectures}\n\t\t\t\t\tonToggleDrawer={handleToggleDrawer}\n\t\t\t\t\tonLectureClick={handleLectureClick}\n\t\t\t\t/>\n\t\t\t</nav>\n\t\t\t<div className=\"amply-wrapper\">\n\t\t\t\t<StudentLectureVideo {...currentLectureDetails} />\n\t\t\t\t<ShowComments lectureId={currentLectureDetails.id} />\n\t\t\t</div>\n\t\t</main>\n\t);\n}\n\nexport default StudentDashboard;\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/reportWebVitals.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Header.js",["127"],"import React, { useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box, Button, Grid, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { authContext } from '../../auth/AuthContext';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t\tfontFamily: 'Roboto',\n\t\tfontSize: '14px',\n\t\ttextAlign: 'center',\n\t\tfontWeight: '500',\n\t\tlineHeight: '24.5px',\n\t\tmarginRight: theme.spacing(2),\n\t\ttextTransform: 'none',\n\t},\n}));\n\nexport default function Header(props) {\n\tconst { userProfile, signOut } = useContext(authContext);\n\tconst { isUserLogged = false, userName = '' } = userProfile;\n\tconst location = useLocation();\n\tconst paths = location.pathname.match(/\\/([a-z]*)/, 'g');\n\tconst [, path = ''] = paths || [];\n\tconst classes = useStyles();\n\treturn (\n\t\t<AppBar className={path === 'studentdashboard' ? classes.appBar : ''}>\n\t\t\t<Toolbar>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" flexGrow={1}>\n\t\t\t\t\t{isUserLogged && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box mx={2}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">Welcome {userName}!</Typography>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Button className={classes.menuButton} onClick={() => signOut()}>\n\t\t\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isUserLogged && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Link className={classes.menuButton} to=\"/login\">\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Link className={classes.menuButton} to=\"/register\">\n\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Theme.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/InstructorLecturesDisplay.js",["128"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/graphqlApi/mutations.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/index.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Homepage.js",["129","130","131","132","133","134","135"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/InstructorDashboard.js",["136","137"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/util/token.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/StudentLectureVideo.js",["138","139"],{"ruleId":"140","severity":1,"message":"141","line":23,"column":8,"nodeType":"142","messageId":"143","endLine":23,"endColumn":24},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"140","severity":1,"message":"148","line":43,"column":24,"nodeType":"142","messageId":"143","endLine":43,"endColumn":31},{"ruleId":"149","severity":1,"message":"150","line":25,"column":5,"nodeType":"151","endLine":25,"endColumn":7,"suggestions":"152"},{"ruleId":"144","replacedBy":"153"},{"ruleId":"146","replacedBy":"154"},{"ruleId":"140","severity":1,"message":"155","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"156","line":3,"column":15,"nodeType":"142","messageId":"143","endLine":3,"endColumn":21},{"ruleId":"140","severity":1,"message":"157","line":3,"column":23,"nodeType":"142","messageId":"143","endLine":3,"endColumn":27},{"ruleId":"140","severity":1,"message":"158","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"159","line":1,"column":39,"nodeType":"142","messageId":"143","endLine":1,"endColumn":47},{"ruleId":"140","severity":1,"message":"160","line":57,"column":22,"nodeType":"142","messageId":"143","endLine":57,"endColumn":28},{"ruleId":"140","severity":1,"message":"161","line":57,"column":38,"nodeType":"142","messageId":"143","endLine":57,"endColumn":46},{"ruleId":"140","severity":1,"message":"158","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"162","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":27},{"ruleId":"140","severity":1,"message":"163","line":2,"column":29,"nodeType":"142","messageId":"143","endLine":2,"endColumn":44},{"ruleId":"140","severity":1,"message":"164","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":17},{"ruleId":"140","severity":1,"message":"165","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"166","line":5,"column":15,"nodeType":"142","messageId":"143","endLine":5,"endColumn":23},{"ruleId":"140","severity":1,"message":"167","line":10,"column":10,"nodeType":"142","messageId":"143","endLine":10,"endColumn":16},{"ruleId":"140","severity":1,"message":"148","line":57,"column":31,"nodeType":"142","messageId":"143","endLine":57,"endColumn":38},{"ruleId":"144","replacedBy":"168"},{"ruleId":"146","replacedBy":"169"},{"ruleId":"140","severity":1,"message":"159","line":1,"column":38,"nodeType":"142","messageId":"143","endLine":1,"endColumn":46},{"ruleId":"140","severity":1,"message":"170","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":17},{"ruleId":"140","severity":1,"message":"171","line":4,"column":2,"nodeType":"142","messageId":"143","endLine":4,"endColumn":8},{"ruleId":"140","severity":1,"message":"165","line":6,"column":2,"nodeType":"142","messageId":"143","endLine":6,"endColumn":9},{"ruleId":"140","severity":1,"message":"172","line":7,"column":2,"nodeType":"142","messageId":"143","endLine":7,"endColumn":8},{"ruleId":"140","severity":1,"message":"173","line":8,"column":2,"nodeType":"142","messageId":"143","endLine":8,"endColumn":12},{"ruleId":"140","severity":1,"message":"174","line":9,"column":2,"nodeType":"142","messageId":"143","endLine":9,"endColumn":6},{"ruleId":"140","severity":1,"message":"175","line":10,"column":2,"nodeType":"142","messageId":"143","endLine":10,"endColumn":10},{"ruleId":"140","severity":1,"message":"176","line":11,"column":2,"nodeType":"142","messageId":"143","endLine":11,"endColumn":14},{"ruleId":"140","severity":1,"message":"177","line":12,"column":2,"nodeType":"142","messageId":"143","endLine":12,"endColumn":9},{"ruleId":"140","severity":1,"message":"178","line":13,"column":2,"nodeType":"142","messageId":"143","endLine":13,"endColumn":12},{"ruleId":"140","severity":1,"message":"179","line":15,"column":8,"nodeType":"142","messageId":"143","endLine":15,"endColumn":17},{"ruleId":"140","severity":1,"message":"180","line":16,"column":8,"nodeType":"142","messageId":"143","endLine":16,"endColumn":16},{"ruleId":"140","severity":1,"message":"181","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":16},{"ruleId":"140","severity":1,"message":"182","line":18,"column":22,"nodeType":"142","messageId":"143","endLine":18,"endColumn":30},{"ruleId":"140","severity":1,"message":"157","line":3,"column":23,"nodeType":"142","messageId":"143","endLine":3,"endColumn":27},{"ruleId":"140","severity":1,"message":"158","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"183","line":1,"column":28,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"184","line":7,"column":2,"nodeType":"142","messageId":"143","endLine":7,"endColumn":7},{"ruleId":"140","severity":1,"message":"185","line":17,"column":8,"nodeType":"142","messageId":"143","endLine":17,"endColumn":24},{"ruleId":"140","severity":1,"message":"186","line":25,"column":8,"nodeType":"142","messageId":"143","endLine":25,"endColumn":20},{"ruleId":"140","severity":1,"message":"187","line":26,"column":8,"nodeType":"142","messageId":"143","endLine":26,"endColumn":20},{"ruleId":"140","severity":1,"message":"188","line":30,"column":8,"nodeType":"142","messageId":"143","endLine":30,"endColumn":37},{"ruleId":"149","severity":1,"message":"189","line":82,"column":5,"nodeType":"151","endLine":82,"endColumn":7,"suggestions":"190"},{"ruleId":"140","severity":1,"message":"157","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"170","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":17},{"ruleId":"140","severity":1,"message":"158","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"157","line":3,"column":33,"nodeType":"142","messageId":"143","endLine":3,"endColumn":37},"no-unused-vars","'publicOperations' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["191"],"no-negated-in-lhs",["192"],"'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'updateUserProfile'. Either include them or remove the dependency array.","ArrayExpression",["193"],["191"],["192"],"'Link' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'useEffect' is defined but never used.","'setState' is defined but never used.","'called' is assigned a value but never used.","'loading2' is assigned a value but never used.","'SortableContainer' is defined but never used.","'SortableElement' is defined but never used.","'arrayMove' is defined but never used.","'Divider' is defined but never used.","'useQuery' is defined but never used.","'string' is defined but never used.",["191"],["192"],"'PropTypes' is defined but never used.","'AppBar' is defined but never used.","'Hidden' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'useTheme' is defined but never used.","'useContext' is defined but never used.","'Demos' is defined but never used.","'EmojiObjectsIcon' is defined but never used.","'ComputerIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'SentimentVeryDissatisfiedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [history, updateUserProfile]",{"range":"199","text":"200"},"Update the dependencies array to be: [history]",{"range":"201","text":"202"},[714,716],"[history, updateUserProfile]",[2534,2536],"[history]"]