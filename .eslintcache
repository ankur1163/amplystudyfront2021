[{"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/App.js":"1","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Register.js":"2","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/auth/AuthContext.js":"3","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/config/envConfig.js":"4","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Footer.js":"5","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Login.js":"6","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/AddNewLectures.js":"7","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/Drawer/Drawer.js":"8","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/StudentDashboard.js":"9","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/reportWebVitals.js":"10","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Header.js":"11","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Theme.js":"12","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/InstructorLecturesDisplay.js":"13","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/graphqlApi/mutations.js":"14","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/index.js":"15","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Homepage.js":"16","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/InstructorDashboard.js":"17","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/util/token.js":"18","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/StudentLectureVideo.js":"19","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/InstructorEditLecture.js":"20","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/graphqlApi/querys.js":"21","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/ShowComments.js":"22"},{"size":2291,"mtime":1612284913008,"results":"23","hashOfConfig":"24"},{"size":3638,"mtime":1612284875267,"results":"25","hashOfConfig":"24"},{"size":1474,"mtime":1612284913009,"results":"26","hashOfConfig":"24"},{"size":67,"mtime":1612118646413,"results":"27","hashOfConfig":"24"},{"size":1100,"mtime":1612284913010,"results":"28","hashOfConfig":"24"},{"size":4561,"mtime":1612709436631,"results":"29","hashOfConfig":"24"},{"size":8100,"mtime":1612638802217,"results":"30","hashOfConfig":"24"},{"size":1963,"mtime":1612284875259,"results":"31","hashOfConfig":"24"},{"size":2644,"mtime":1612644176875,"results":"32","hashOfConfig":"24"},{"size":362,"mtime":1612118646418,"results":"33","hashOfConfig":"24"},{"size":1849,"mtime":1612284913011,"results":"34","hashOfConfig":"24"},{"size":3630,"mtime":1612284875263,"results":"35","hashOfConfig":"24"},{"size":485,"mtime":1612284913011,"results":"36","hashOfConfig":"24"},{"size":855,"mtime":1612284913013,"results":"37","hashOfConfig":"24"},{"size":474,"mtime":1612118646414,"results":"38","hashOfConfig":"24"},{"size":23360,"mtime":1612284913017,"results":"39","hashOfConfig":"24"},{"size":4025,"mtime":1612638802221,"results":"40","hashOfConfig":"24"},{"size":321,"mtime":1612284875268,"results":"41","hashOfConfig":"24"},{"size":3425,"mtime":1612284913013,"results":"42","hashOfConfig":"24"},{"size":2574,"mtime":1612638802222,"results":"43","hashOfConfig":"24"},{"size":310,"mtime":1612638802220,"results":"44","hashOfConfig":"24"},{"size":3202,"mtime":1612638802218,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"q26pjn",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/App.js",["105"],"import { ThemeProvider } from '@material-ui/styles';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport theme from './components/ui/Theme';\nimport Footer from './components/ui/Footer';\nimport Header from './components/ui/Header';\nimport Homepage from './pages/Homepage';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport { AuthProvider } from './auth/AuthContext';\nimport StudentDashboard from './pages/StudentDashboard';\nimport InstructorDashboard from './pages/InstructorDashboard';\nimport InstructorEditLecture from './pages/InstructorEditLecture';\nimport envConfig from './config/envConfig';\nimport './App.css';\n\nconst httpLink = createHttpLink({\n\turi: envConfig.HASURA_URL,\n});\n\nconst authLink = setContext(({ operationName }, prevCtx) => {\n\tconst publicOperations = ['Signin', 'Signup'];\n\tconsole.log('operationname', operationName);\n\tconst token = localStorage.getItem('user_token');\n\tconst headers = {\n\t\t...prevCtx.header,\n\t};\n\n\tif (token === undefined || token === null || token === '') {\n\t\tconsole.info('token not found', token);\n\t\treturn;\n\t}\n\tconsole.info('token found');\n\theaders.authorization = `Bearer ${token}`;\n\n\treturn { headers };\n});\n\nconst client = new ApolloClient({\n\tcache: new InMemoryCache(),\n\tlink: authLink.concat(httpLink),\n});\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<AuthProvider>\n\t\t\t\t\t<ApolloProvider client={client}>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={Homepage} />\n\t\t\t\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t<Route path=\"/register\" component={Register} />\n\t\t\t\t\t\t\t<Route path=\"/studentdashboard\" component={StudentDashboard} />\n\t\t\t\t\t\t\t<Route path=\"/instructordashboard\" component={InstructorDashboard} />\n\t\t\t\t\t\t\t<Route path=\"/instructoreditlecture\" component={InstructorEditLecture} />\n\t\t\t\t\t\t\t<Route path=\"/paymentcompleted\" component={() => <h1>payment completed</h1>} />\n\t\t\t\t\t\t\t<Route path=\"*\" component={Homepage} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</ApolloProvider>\n\t\t\t\t</AuthProvider>\n\t\t\t</BrowserRouter>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n",["106","107"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Register.js",["108"],"import React from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Box, Typography, TextField, Button, Grid } from '@material-ui/core';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\n\nconst useStyles = makeStyles((theme) => ({\n\tloginLink: {\n\t\tcolor: theme.palette.primary.main,\n\t\tfontWeight: 600,\n\t\ttextDecoration: 'none',\n\t\tmargin: '0 0.5rem',\n\t},\n}));\n\nconst initialValues = {\n\tdisplayName: '',\n\temail: '',\n\tpassword: '',\n};\n\nconst SIGN_UP_MUTATION = gql`\n\tmutation Signup($email: String!, $password: String!, $displayName: String!) {\n\t\tcreate_user(credentials: { email: $email, password: $password, displayName: $displayName }) {\n\t\t\tdisplayName\n\t\t\temail\n\t\t\tid\n\t\t}\n\t}\n`;\n\nconst validationSchema = Yup.object().shape({\n\tdisplayName: Yup.string().required('This field is required'),\n\temail: Yup.string().email('it should be an email').required('This field is required'),\n\tpassword: Yup.string().required('This field is required'),\n});\n\nfunction Register(props) {\n\tconst classes = useStyles();\n\tconst [create_user, { loading }] = useMutation(SIGN_UP_MUTATION);\n\tlet history = useHistory();\n\n\tconst signupHandler = async (values) => {\n\t\tcreate_user({\n\t\t\tvariables: values,\n\t\t})\n\t\t\t.then(({ error }) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.warn('error is ', error);\n\t\t\t\t} else {\n\t\t\t\t\thistory.push('/signin');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.warn(error);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={0}\n\t\t\t\tdirection=\"column\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\tstyle={{ height: 'calc(100vh - 240px)' }}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\">Create account</Typography>\n\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tonSubmit={signupHandler}\n\t\t\t\t>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tisValid,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\tisInitialValid,\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\t\t\t\t\tvalue={values.displayName}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.displayName && errors.displayName}\n\t\t\t\t\t\t\t\t\thelperText={touched.displayName && errors.displayName}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-around\" mt={2} mb={4}>\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\">\n\t\t\t\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\" className={classes.loginLink}>\n\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Grid>\n\t\t</>\n\t);\n}\n\nexport default Register;\n",["109","110"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/auth/AuthContext.js",["111"],"import React, { createContext, useEffect, useContext, useState } from 'react';\nimport { useHistory, Route, Redirect } from 'react-router-dom';\nimport { decode } from '../util/token';\n\nexport const authContext = createContext(null);\n\nexport function AuthProvider({ children }) {\n\tconst initialState = {\n\t\tisUserLogged: Boolean(localStorage.getItem('user_token')),\n\t\tuserName: '',\n\t\tuserId: '',\n\t\tuserEmail: '',\n\t};\n\tconst [userProfile, setUserProfile] = useState(() => initialState);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst existSessionActive = localStorage.getItem('user_token');\n\n\t\tif (existSessionActive) {\n\t\t\tupdateUserProfile(existSessionActive);\n\t\t} else {\n\t\t\thistory.replace('/');\n\t\t}\n\t}, []);\n\n\tconst updateUserProfile = (session) => {\n\t\tconst { name, user_id, email } = decode(session);\n\t\tsetUserProfile({\n\t\t\t...initialState,\n\t\t\tuserName: name,\n\t\t\tuserId: user_id,\n\t\t\tuserEmail: email,\n\t\t});\n\t};\n\n\tconst signOut = () => {\n\t\tlocalStorage.removeItem('user_token');\n\t\tsetUserProfile({\n\t\t\tisUserLogged: false,\n\t\t\tuserName: '',\n\t\t\tuserId: '',\n\t\t\tuserEmail: '',\n\t\t});\n\t\thistory.replace('/login');\n\t};\n\n\treturn (\n\t\t<authContext.Provider\n\t\t\tvalue={{\n\t\t\t\tuserProfile,\n\t\t\t\tsetUserProfile,\n\t\t\t\tsignOut,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</authContext.Provider>\n\t);\n}\n\nexport function ProtectedRoute({ children, props }) {\n\tconst context = useContext(authContext);\n\treturn <Route {...props}>{context?.isUserSignedIn ? children : <Redirect to=\"/signin\" />}</Route>;\n}\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/config/envConfig.js",[],["112","113"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Footer.js",["114","115","116"],"import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\tfooter: {\n\t\tposition: 'relative',\n\t\twidth: '100%',\n\t\tbottom: 0,\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t\tfontFamily: 'Roboto',\n\t\tfontSize: '14px',\n\t\ttextAlign: 'center',\n\t\tfontWeight: '500',\n\t\tlineHeight: '24.5px',\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nexport default function Footer(props) {\n\tconst location = useLocation();\n\tconst paths = location.pathname.match(/\\/([a-z]*)/, 'g');\n\tconst [, path = ''] = paths || [];\n\tconst classes = useStyles();\n\treturn (\n\t\t<footer className={`${path === 'studentdashboard' ? classes.appBar : ''} ${classes.footer}`}>\n\t\t\t<Box pt={2} pb={2} align=\"center\">\n\t\t\t\t<Typography variant=\"h4\">Footer</Typography>\n\t\t\t</Box>\n\t\t</footer>\n\t);\n}\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Login.js",["117","118","119","120"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/AddNewLectures.js",["121","122","123","124","125","126","127","128"],"import React, { useEffect, useState } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Divider, Grid, Typography, Button,FormControlLabel,RadioGroup,Radio,FormControl,FormLabel } from '@material-ui/core';\nimport { gql, useQuery } from '@apollo/client';\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\nimport {TextField} from \"@material-ui/core\";\nimport { useMutation } from '@apollo/client';\nimport { string } from 'yup/lib/locale';\n\nconst initialValues = {\n    title:\"\",\n    videoUrl:\"\",\n    description:\"\",\n    type:\"lecture\",\n    paid:true,\n    snumber:\"\",\n}\n\nconst validationSchema = Yup.object().shape({\n    title:Yup.string(\"please input title in string only\").required(\"this field is required\"),\n    videoUrl:Yup.string(\"please input videoURL in string only\"),\n    description:Yup.string(\"please input description in string only\").required(\"this field is required\"),\n    type:Yup.string(\"please input type\").required(\"input is required\"),\n    paid:Yup.bool(\"only select true or false\").required(\"paid field is required\"),\n    snumber:Yup.number(\"number is required\").required(\"cant leave empty\").positive(\"should be a positive number\")\n\n})\n\n\n\n\nconst ADD_LECTURE = gql`\nmutation Addlecture($description: String!,$paid: Boolean!, $snumber:Int!,$title:String!,$type: String!,$videoUrl: String!) {\n    insert_lectures(objects: {description: $description, paid: $paid, snumber: $snumber, title: $title, type: $type, videoUrl: $videoUrl}) {\n      returning {\n        description\n        snumber\n        title\n        type\n        videoUrl\n      }\n    }\n  }\n\n\n\n\n`;\n\n\n\n\nexport default function AddNewLectures(props) {\n    const [addNewLecture, setaddNewLecture] = useState(true);\n   const [addLecturegraphql, {loading}] = useMutation(ADD_LECTURE)\n    \n   const addlectureHandler=(values, {resetForm})=>{\n    console.log(\"add lecture handler\",values);\n    const newValues = parseInt(values.snumber)\n    values.snumber = newValues;\n    addLecturegraphql({variables:values}).then(({errors,data})=> {\n        return errors ? console.log(\"errors are \",errors)  :  (console.log(\"data is\",data),resetForm())\n    })\n    \n}\n   \n   if (addNewLecture) {\n      return (\n        <div>\n          <Button\n            onClick={() => setaddNewLecture((prevstate) => !prevstate)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Add new lecture\n          </Button>\n        </div>\n      );\n    }\n  \n    return (\n      <div>\n        \n            <Typography variant=\"h6\">\n                Add new lecture\n            </Typography>\n            <Formik initialValues={initialValues} onSubmit={addlectureHandler} validationSchema={validationSchema}>\n                {({\n                    values,\n                    touched,\n                    errors,\n                    isValid,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isInitialValid,\n                    submitCount,\n                    isSubmitting\n                })=>(\n                    <form onSubmit={handleSubmit} >\n                      <Grid  container >\n                          <Grid item>\n                          <TextField\n                        label=\"title\"\n                        name=\"title\"\n                        value={values.title}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        \n                        error={!!(errors && errors.title && touched.title)}\n                        helperText={\n                            errors && errors.title && touched.title\n                        }\n                        margin=\"normal\"\n\n                        />\n                          </Grid>\n                      \n\n                    \n\n                      <Grid item>\n                      <TextField\n                        label=\"videourl\"\n                        name=\"videoUrl\"\n                        value={values.videoUrl}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                       \n                        error={!!(errors && errors.password && touched.password)}\n                        helperText={\n                            errors && errors.password && touched.password\n                        }\n                        margin=\"normal\"\n\n                        />\n                        </Grid>\n                        <Grid item>\n                        <TextField\n                        label=\"description\"\n                        name=\"description\"\n                        value={values.description}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                       \n                        error={!!(errors && errors.description && touched.description)}\n                        helperText={\n                            errors && errors.description && touched.description\n                        }\n                        margin=\"normal\"\n\n                        />\n                        </Grid>\n                        <Grid item>\n                        <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">type</FormLabel>\n                        <RadioGroup aria-label=\"type\" name=\"type\" value={values.type} onChange={handleChange}>\n                            <FormControlLabel value=\"lecture\" control={<Radio />} label=\"lecture\" />\n                            <FormControlLabel value=\"assignment\" control={<Radio />} label=\"assignment\" />\n                            \n                        </RadioGroup>\n                        </FormControl>\n                       \n                        </Grid>\n                        <Grid item>\n                        <FormControl component=\"fieldset2\">\n                        <FormLabel component=\"legend2\">Paid</FormLabel>\n                        <RadioGroup aria-label=\"paid\" name=\"paid\" value={values.paid} onChange={handleChange}>\n                            <FormControlLabel value=\"true\" control={<Radio />} label=\"true\" />\n                            <FormControlLabel value=\"false\" control={<Radio />} label=\"false\" />\n                            \n                        </RadioGroup>\n                        </FormControl>\n                        </Grid>\n                        <Grid item>\n                        <TextField\n                        label=\"snumber\"\n                        name=\"snumber\"\n                        value={values.snumber}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                       \n                        error={!!(errors && errors.snumber && touched.snumber)}\n                        helperText={\n                            errors && errors.snumber && touched.snumber\n                        }\n                        margin=\"normal\"\n\n                        />\n                        </Grid>\n                          \n                          <Grid item >\n                          <Button\n                            \n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick= {()=>setaddNewLecture(true)}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            \n                            disabled={!isValid || !!isInitialValid}>\n                                save\n                            </Button>\n\n                          </Grid>\n                          <Grid item>\n                          \n\n                          </Grid>\n                         \n                       </Grid> \n                    </form>\n                )\n\n                }\n            </Formik>\n      \n       \n      </div>\n    );\n  }","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/Drawer/Drawer.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/StudentDashboard.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, { useEffect, useState, setState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tAppBar,\n\tCssBaseline,\n\tDivider,\n\tHidden,\n\tIconButton,\n\tList,\n\tListItem,\n\tListItemText,\n\tToolbar,\n\tTypography,\n} from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport StudentLectureVideo from '../components/ui/StudentLectureVideo';\nimport ShowComments from '../components/ui/ShowComments';\nimport Drawer from '../components/Drawer/Drawer';\nimport { useQuery } from '@apollo/client';\nimport { getLectures } from '../graphqlApi/querys';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t},\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n}));\n\nfunction StudentDashboard(props) {\n\tconst initialLecture = [\n\t\t{\n\t\t\ttitle: 'No video is selected',\n\t\t\tvideoUrl: '',\n\t\t\tdescription: '',\n\t\t\tid: '',\n\t\t\tpaid: false,\n\t\t\tsnumber: 1,\n\t\t\ttype: 'lecture',\n\t\t\tlectureTitle: '',\n\t\t\ttext: '',\n\t\t\tdoneStatus: false,\n\t\t},\n\t];\n\n\tconst classes = useStyles();\n\tconst [mobileOpen, setMobileOpen] = useState(false);\n\tconst { loading, error, data = {} } = useQuery(getLectures);\n\tconst { lectures = [] } = data;\n\tconst [currentLectureDetails, setCurrentLectureDetails] = useState(initialLecture);\n\n\tuseEffect(() => {\n\t\tif (lectures.length !== 0) {\n\t\t\tsetCurrentLectureDetails(lectures[0]);\n\t\t}\n\t}, [lectures]);\n\n\tif (loading) return 'loading...';\n\n\tif (error) return `Error is ${error.message}`;\n\n\tconst handleToggleDrawer = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\tconst handleLectureClick = (id) => {\n\t\tconst lectureSelected = lectures.find((item) => item.id === id);\n\t\tsetCurrentLectureDetails(lectureSelected);\n\t};\n\n\treturn (\n\t\t<main className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\n\t\t\t\t<Drawer\n\t\t\t\t\tlectures={lectures}\n\t\t\t\t\tonToggleDrawer={handleToggleDrawer}\n\t\t\t\t\tonLectureClick={handleLectureClick}\n\t\t\t\t/>\n\t\t\t</nav>\n\t\t\t<div className=\"amply-wrapper\">\n\t\t\t\t<StudentLectureVideo {...currentLectureDetails} />\n\t\t\t\t<ShowComments lectureId={currentLectureDetails.id} />\n\t\t\t</div>\n\t\t</main>\n\t);\n}\n\nexport default StudentDashboard;\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/reportWebVitals.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Header.js",["144"],"import React, { useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box, Button, Grid, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { authContext } from '../../auth/AuthContext';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t\tfontFamily: 'Roboto',\n\t\tfontSize: '14px',\n\t\ttextAlign: 'center',\n\t\tfontWeight: '500',\n\t\tlineHeight: '24.5px',\n\t\tmarginRight: theme.spacing(2),\n\t\ttextTransform: 'none',\n\t},\n}));\n\nexport default function Header(props) {\n\tconst { userProfile, signOut } = useContext(authContext);\n\tconst { isUserLogged = false, userName = '' } = userProfile;\n\tconst location = useLocation();\n\tconst paths = location.pathname.match(/\\/([a-z]*)/, 'g');\n\tconst [, path = ''] = paths || [];\n\tconst classes = useStyles();\n\treturn (\n\t\t<AppBar className={path === 'studentdashboard' ? classes.appBar : ''}>\n\t\t\t<Toolbar>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" flexGrow={1}>\n\t\t\t\t\t{isUserLogged && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box mx={2}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body2\">Welcome {userName}!</Typography>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Button className={classes.menuButton} onClick={() => signOut()}>\n\t\t\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isUserLogged && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Link className={classes.menuButton} to=\"/login\">\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Link className={classes.menuButton} to=\"/register\">\n\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/Theme.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/InstructorLecturesDisplay.js",["145"],"import React, { useEffect } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\n\n\n\n\nfunction InstructorLecturesDisplay(props) {\n\n  \n\n  \n   \n    \n    return (\n        <>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Typography variant=\"h2\">\n                        display\n                    </Typography>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\n\n\n\nexport default InstructorLecturesDisplay;\n",["146","147"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/graphqlApi/mutations.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/index.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/Homepage.js",["148","149","150","151","152","153","154"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/InstructorDashboard.js",["155","156"],"import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport {\n\tAppBar,\n\tCssBaseline,\n\tDivider,\n\tDrawer,\n\tHidden,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tToolbar,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InstructorLecturesDisplay from '../components/ui/InstructorLecturesDisplay';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { gql, useQuery } from '@apollo/client';\n\nconst getLectures = gql`\n\tquery MyQuery {\n\t\tlectures {\n\t\t\ttitle\n\t\t\tvideoUrl\n\t\t\tdescription\n\t\t\tid\n\t\t\tpaid\n\t\t\tsnumber\n\t\t\ttype\n\t\t}\n\t}\n`;\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tmarginTop: '100px',\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t},\n\t// necessary for content to be below app bar\n\ttoolbar: theme.mixins.toolbar,\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n\nfunction InstructorDashboard(props) {\n\tconst { window } = props;\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\tconst { loading, error, data } = useQuery(getLectures);\n\n\tif (loading) return 'Loading...';\n\n\tif (error) return `Error! ${error.message}`;\n\tconsole.log('data is', data);\n\n\t//   <ListItem button key=\"lecturessidebar\">\n\n\t//   <ListItemIcon><InboxIcon /></ListItemIcon>\n\t//   <ListItemText primary=\"Lectures\" />\n\t// </ListItem>\n\t// <ListItem button key=\"reportssidebar\">\n\t//   <ListItemIcon><InboxIcon /></ListItemIcon>\n\t//   <ListItemText primary=\"Reports\" />\n\t// </ListItem>\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<div className={classes.toolbar} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t{data.lectures.map((text, index) => (\n\t\t\t\t\t<ListItem button key={text.title}>\n\t\t\t\t\t\t<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={text.title} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</div>\n\t);\n\n\tconst container = window !== undefined ? () => window().document.body : undefined;\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tResponsive drawer\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n\t\t\t\t<Hidden smUp implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden xsDown implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t<InstructorLecturesDisplay />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default InstructorDashboard;\n","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/util/token.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/StudentLectureVideo.js",["157","158"],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/pages/InstructorEditLecture.js",["159","160","161"],"import React, { useEffect, useState } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Divider, Grid, Typography, Button } from '@material-ui/core';\nimport { gql, useQuery } from '@apollo/client';\n\n\n import AddNewLectures from '../components/ui/AddNewLectures';\nconst getLectures = gql`\n\nquery MyQuery {\n    lectures {\n      title\n      videoUrl\n      description\n      id\n      paid\n      snumber\n      type\n    }\n  }\n`\n\n\n\n\n\nexport default function InstructorEditLecture(props) {\n\n    const [items, setItems] = useState([]);\n    const { loading, error, data } = useQuery(getLectures);\n   \n\n    console.log(\"use effect\", data)\n    const SortableItem = SortableElement(({ value }) => <li >{value}</li>)\n\n\n   \n    const SortableList = SortableContainer(({ items }) => {\n        console.log(\"items in sortable container\", items)\n        return (\n            <ul >\n                {\n                    items.map((value, index) => (\n                        <div style={{ height: \"60px\" }}>\n                            <SortableItem key={`item-${value.snumber}`} index={index} value={value.title} />\n                            <Divider />\n\n                        </div>\n\n                    ))\n                }\n\n            </ul>\n\n        )\n    })\n    useEffect(() => {\n        \n        if (data) {\n            setItems(data.lectures);\n        }\n\n    }, [data]);\n    if (loading) {\n        console.log(\"loading\")\n        return 'Loading...';\n    }\n    if (error) return `Error! ${error.message}`;\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        console.log(\"on sort end\", oldIndex, newIndex)\n        setItems(arrayMove(items, oldIndex, newIndex));\n\n    };\n    const lectureButtonClicked = () => {\n        console.log(\"lecture button clicked\")\n    }\n\n\n    console.log(\"loading is\", loading)\n    console.log(\"error is\", error)\n    console.log(\"data is\", data)\n    console.log(\"items now\", items)\n\n\n    return (\n        <>\n            {loading && (<h1> loading...</h1>)}\n            { data ? (<Grid style={{ marginTop: \"80px\" }} container direction=\"row\">\n                <Grid item sm={4}>\n                    <SortableList items={items} onSortEnd={onSortEnd} />\n                    <AddNewLectures/>\n                </Grid>\n                <Grid item sm={8}>\n                \n                </Grid>\n                <Grid item>\n                    \n                </Grid>\n                \n            </Grid>\n            \n            ) : null}\n            \n\n\n\n        </>\n    )\n\n}","/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/graphqlApi/querys.js",[],"/Users/umasharma/Documents/codingproject/amplystudyfront2021/src/components/ui/ShowComments.js",["162","163","164","165","166","167","168","169"],"import React, { useContext, useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { gql, useMutation, useQuery, useLazyQuery } from '@apollo/client';\nimport { authContext } from '../../auth/AuthContext';\nimport { SHOW_COMMENTS } from '../../graphqlApi/querys';\nimport { ADD_COMMENT } from '../../graphqlApi/mutations';\n\nexport default function ShowComments({ lectureId }) {\n\tconst { userProfile } = useContext(authContext);\n\tconst [showComment, setShowComment] = useState([]);\n\n\tconst [\n\t\taddCommentgraphql,\n\t\t{ loading: loadingAddComment, error: errorAddComment, data: singleComment },\n\t] = useMutation(ADD_COMMENT);\n\n\tconst [comment, setComment] = useState('');\n\n\tconst { loading: loadingComments, error: errorComments, data: allComments } = useQuery(\n\t\tSHOW_COMMENTS\n\t);\n\n\tuseEffect(() => {\n\t\tif (allComments && allComments.comments !== 0) {\n\t\t\tloadComments(allComments.comments);\n\t\t}\n\t}, [allComments]);\n\n\tuseEffect(() => {\n\t\tif (singleComment) {\n\t\t\tsetShowComment((oldComments) => [...oldComments, singleComment.insert_comments_one]);\n\t\t}\n\t}, [singleComment]);\n\n\t// this function will trigger on save button. We are adding comment in hasura and also making local comment state empty\n\tconst handleAddComment = () => {\n\t\taddCommentgraphql({\n\t\t\tvariables: { comment: comment, lectureid: lectureId, user_id: userProfile.userId },\n\t\t});\n\t\tsetComment('');\n\t};\n\n\tconst loadComments = (data) => {\n\t\tsetShowComment(data);\n\t};\n\n\tconst handleResetComment = () => {\n\t\tsetComment('');\n\t};\n\n\tconst handleNewComment = (event) => {\n\t\tsetComment(event.target.value);\n\t};\n\n\t// if (dataagainComments) {\n\t//   console.log(\"after adding comment\", dataagainComments)\n\t//   console.log(\"show comment\",showComment)\n\n\t//   let updatedCommentsAfterAddComment = showComment;\n\t//   console.log(\"gt\",dataagainComments.insert_comments_one)\n\t//   updatedCommentsAfterAddComment.push(dataagainComments.insert_comments_one);\n\t//   console.log(\"updated comment\",updatedCommentsAfterAddComment)\n\t//   setShowComment(updatedCommentsAfterAddComment)\n\t// }\n\n\tif (errorAddComment) return `Error is ${errorAddComment.message}`;\n\treturn (\n\t\t<Box my={2} mx={{ xs: 2, sm: 4, md: 5 }}>\n\t\t\t<Typography variant=\"h4\">Comments </Typography>\n\t\t\t{showComment.map(({ id, comment, created_at }) => (\n\t\t\t\t<Box style={{ backgroundColor: 'lightgrey' }} my={1} p={1} key={id}>\n\t\t\t\t\t<Typography variant=\"body1\">{comment}</Typography>\n\t\t\t\t\t<Typography variant=\"caption\">{created_at}</Typography>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t\t<Box my={2}>\n\t\t\t\t<textarea\n\t\t\t\t\tplaceholder=\"Leave a comment\"\n\t\t\t\t\tonChange={handleNewComment}\n\t\t\t\t\tvalue={comment}\n\t\t\t\t\tname=\"w3review\"\n\t\t\t\t\trows=\"5\"\n\t\t\t\t\tstyle={{ width: '100%', fontFamily: 'inherit', padding: '0.5rem' }}\n\t\t\t\t/>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"flex-end\" my={1}>\n\t\t\t\t\t<Box mx={1}>\n\t\t\t\t\t\t<Button color=\"secondary\" variant=\"outlined\" onClick={handleResetComment} type=\"button\">\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box mx={1}>\n\t\t\t\t\t\t<Button color=\"primary\" onClick={handleAddComment} variant=\"contained\" type=\"button\">\n\t\t\t\t\t\t\tComment\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\n",{"ruleId":"170","severity":1,"message":"171","line":23,"column":8,"nodeType":"172","messageId":"173","endLine":23,"endColumn":24},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"170","severity":1,"message":"178","line":43,"column":24,"nodeType":"172","messageId":"173","endLine":43,"endColumn":31},{"ruleId":"174","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":25,"column":5,"nodeType":"183","endLine":25,"endColumn":7,"suggestions":"184"},{"ruleId":"174","replacedBy":"185"},{"ruleId":"176","replacedBy":"186"},{"ruleId":"170","severity":1,"message":"187","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"188","line":3,"column":15,"nodeType":"172","messageId":"173","endLine":3,"endColumn":21},{"ruleId":"170","severity":1,"message":"189","line":3,"column":23,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"170","severity":1,"message":"190","line":1,"column":29,"nodeType":"172","messageId":"173","endLine":1,"endColumn":38},{"ruleId":"170","severity":1,"message":"191","line":1,"column":39,"nodeType":"172","messageId":"173","endLine":1,"endColumn":47},{"ruleId":"170","severity":1,"message":"192","line":8,"column":35,"nodeType":"172","messageId":"173","endLine":8,"endColumn":43},{"ruleId":"170","severity":1,"message":"193","line":57,"column":21,"nodeType":"172","messageId":"173","endLine":57,"endColumn":27},{"ruleId":"170","severity":1,"message":"190","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"194","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":27},{"ruleId":"170","severity":1,"message":"195","line":2,"column":29,"nodeType":"172","messageId":"173","endLine":2,"endColumn":44},{"ruleId":"170","severity":1,"message":"196","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":17},{"ruleId":"170","severity":1,"message":"197","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":17},{"ruleId":"170","severity":1,"message":"192","line":5,"column":15,"nodeType":"172","messageId":"173","endLine":5,"endColumn":23},{"ruleId":"170","severity":1,"message":"198","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":16},{"ruleId":"170","severity":1,"message":"178","line":57,"column":31,"nodeType":"172","messageId":"173","endLine":57,"endColumn":38},{"ruleId":"170","severity":1,"message":"191","line":1,"column":38,"nodeType":"172","messageId":"173","endLine":1,"endColumn":46},{"ruleId":"170","severity":1,"message":"199","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":17},{"ruleId":"170","severity":1,"message":"200","line":4,"column":2,"nodeType":"172","messageId":"173","endLine":4,"endColumn":8},{"ruleId":"170","severity":1,"message":"197","line":6,"column":2,"nodeType":"172","messageId":"173","endLine":6,"endColumn":9},{"ruleId":"170","severity":1,"message":"201","line":7,"column":2,"nodeType":"172","messageId":"173","endLine":7,"endColumn":8},{"ruleId":"170","severity":1,"message":"202","line":8,"column":2,"nodeType":"172","messageId":"173","endLine":8,"endColumn":12},{"ruleId":"170","severity":1,"message":"203","line":9,"column":2,"nodeType":"172","messageId":"173","endLine":9,"endColumn":6},{"ruleId":"170","severity":1,"message":"204","line":10,"column":2,"nodeType":"172","messageId":"173","endLine":10,"endColumn":10},{"ruleId":"170","severity":1,"message":"205","line":11,"column":2,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"170","severity":1,"message":"206","line":12,"column":2,"nodeType":"172","messageId":"173","endLine":12,"endColumn":9},{"ruleId":"170","severity":1,"message":"207","line":13,"column":2,"nodeType":"172","messageId":"173","endLine":13,"endColumn":12},{"ruleId":"170","severity":1,"message":"208","line":15,"column":8,"nodeType":"172","messageId":"173","endLine":15,"endColumn":17},{"ruleId":"170","severity":1,"message":"209","line":16,"column":8,"nodeType":"172","messageId":"173","endLine":16,"endColumn":16},{"ruleId":"170","severity":1,"message":"210","line":17,"column":8,"nodeType":"172","messageId":"173","endLine":17,"endColumn":16},{"ruleId":"170","severity":1,"message":"211","line":18,"column":22,"nodeType":"172","messageId":"173","endLine":18,"endColumn":30},{"ruleId":"170","severity":1,"message":"189","line":3,"column":23,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"170","severity":1,"message":"190","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"174","replacedBy":"212"},{"ruleId":"176","replacedBy":"213"},{"ruleId":"170","severity":1,"message":"214","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":38},{"ruleId":"170","severity":1,"message":"215","line":7,"column":2,"nodeType":"172","messageId":"173","endLine":7,"endColumn":7},{"ruleId":"170","severity":1,"message":"216","line":17,"column":8,"nodeType":"172","messageId":"173","endLine":17,"endColumn":24},{"ruleId":"170","severity":1,"message":"217","line":25,"column":8,"nodeType":"172","messageId":"173","endLine":25,"endColumn":20},{"ruleId":"170","severity":1,"message":"218","line":26,"column":8,"nodeType":"172","messageId":"173","endLine":26,"endColumn":20},{"ruleId":"170","severity":1,"message":"219","line":30,"column":8,"nodeType":"172","messageId":"173","endLine":30,"endColumn":37},{"ruleId":"181","severity":1,"message":"220","line":82,"column":5,"nodeType":"183","endLine":82,"endColumn":7,"suggestions":"221"},{"ruleId":"170","severity":1,"message":"189","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"199","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":17},{"ruleId":"170","severity":1,"message":"190","line":1,"column":29,"nodeType":"172","messageId":"173","endLine":1,"endColumn":38},{"ruleId":"170","severity":1,"message":"189","line":3,"column":33,"nodeType":"172","messageId":"173","endLine":3,"endColumn":37},{"ruleId":"170","severity":1,"message":"207","line":4,"column":25,"nodeType":"172","messageId":"173","endLine":4,"endColumn":35},{"ruleId":"170","severity":1,"message":"188","line":4,"column":37,"nodeType":"172","messageId":"173","endLine":4,"endColumn":43},{"ruleId":"170","severity":1,"message":"222","line":76,"column":11,"nodeType":"172","messageId":"173","endLine":76,"endColumn":31},{"ruleId":"170","severity":1,"message":"223","line":1,"column":50,"nodeType":"172","messageId":"173","endLine":1,"endColumn":56},{"ruleId":"170","severity":1,"message":"187","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"189","line":3,"column":23,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"170","severity":1,"message":"224","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":13},{"ruleId":"170","severity":1,"message":"225","line":4,"column":38,"nodeType":"172","messageId":"173","endLine":4,"endColumn":50},{"ruleId":"170","severity":1,"message":"226","line":15,"column":14,"nodeType":"172","messageId":"173","endLine":15,"endColumn":31},{"ruleId":"170","severity":1,"message":"227","line":20,"column":19,"nodeType":"172","messageId":"173","endLine":20,"endColumn":34},{"ruleId":"170","severity":1,"message":"228","line":20,"column":43,"nodeType":"172","messageId":"173","endLine":20,"endColumn":56},"no-unused-vars","'publicOperations' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"'loading' is assigned a value but never used.",["229"],["230"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'updateUserProfile'. Either include them or remove the dependency array.","ArrayExpression",["231"],["229"],["230"],"'Link' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'useEffect' is defined but never used.","'setState' is defined but never used.","'useQuery' is defined but never used.","'called' is assigned a value but never used.","'SortableContainer' is defined but never used.","'SortableElement' is defined but never used.","'arrayMove' is defined but never used.","'Divider' is defined but never used.","'string' is defined but never used.","'PropTypes' is defined but never used.","'AppBar' is defined but never used.","'Hidden' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'useTheme' is defined but never used.",["229"],["230"],"'useContext' is defined but never used.","'Demos' is defined but never used.","'EmojiObjectsIcon' is defined but never used.","'ComputerIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'SentimentVeryDissatisfiedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["232"],"'lectureButtonClicked' is assigned a value but never used.","'useRef' is defined but never used.","'gql' is defined but never used.","'useLazyQuery' is defined but never used.","'loadingAddComment' is assigned a value but never used.","'loadingComments' is assigned a value but never used.","'errorComments' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [history, updateUserProfile]",{"range":"237","text":"238"},"Update the dependencies array to be: [history]",{"range":"239","text":"240"},[714,716],"[history, updateUserProfile]",[2534,2536],"[history]"]